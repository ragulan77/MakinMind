<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class MakinMindProjectBundleEntityProjectProxy extends \MakinMind\ProjectBundle\Entity\Project implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setShortDescription($shortDescription)
    {
        $this->__load();
        return parent::setShortDescription($shortDescription);
    }

    public function getShortDescription()
    {
        $this->__load();
        return parent::getShortDescription();
    }

    public function setLongDescription($longDescription)
    {
        $this->__load();
        return parent::setLongDescription($longDescription);
    }

    public function getLongDescription()
    {
        $this->__load();
        return parent::getLongDescription();
    }

    public function setBeginDate($beginDate)
    {
        $this->__load();
        return parent::setBeginDate($beginDate);
    }

    public function getBeginDate()
    {
        $this->__load();
        return parent::getBeginDate();
    }

    public function setEndingDate($endingDate)
    {
        $this->__load();
        return parent::setEndingDate($endingDate);
    }

    public function getEndingDate()
    {
        $this->__load();
        return parent::getEndingDate();
    }

    public function setRecruitment($recruitment)
    {
        $this->__load();
        return parent::setRecruitment($recruitment);
    }

    public function getRecrutment()
    {
        $this->__load();
        return parent::getRecrutment();
    }

    public function setCoverPic(\MakinMind\ResourceBundle\Entity\Resource $coverPic)
    {
        $this->__load();
        return parent::setCoverPic($coverPic);
    }

    public function getCoverPic()
    {
        $this->__load();
        return parent::getCoverPic();
    }

    public function setLogo(\MakinMind\ResourceBundle\Entity\Resource $logo)
    {
        $this->__load();
        return parent::setLogo($logo);
    }

    public function getLogo()
    {
        $this->__load();
        return parent::getLogo();
    }

    public function setOwner(\MakinMind\UserBundle\Entity\User $owner)
    {
        $this->__load();
        return parent::setOwner($owner);
    }

    public function getOwner()
    {
        $this->__load();
        return parent::getOwner();
    }

    public function addDomain(\MakinMind\ProjectBundle\Entity\Domains $domain)
    {
        $this->__load();
        return parent::addDomain($domain);
    }

    public function getDomains()
    {
        $this->__load();
        return parent::getDomains();
    }

    public function getRecruitment()
    {
        $this->__load();
        return parent::getRecruitment();
    }

    public function setApplyTerms(\MakinMind\ProjectBundle\Entity\ApplyTerms $applyTerms)
    {
        $this->__load();
        return parent::setApplyTerms($applyTerms);
    }

    public function getApplyTerms()
    {
        $this->__load();
        return parent::getApplyTerms();
    }

    public function addDomains(\MakinMind\ProjectBundle\Entity\Domains $domains)
    {
        $this->__load();
        return parent::addDomains($domains);
    }

    public function hisProject(\MakinMind\UserBundle\Entity\User $user)
    {
        $this->__load();
        return parent::hisProject($user);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'shortDescription', 'longDescription', 'beginDate', 'endingDate', 'recruitment', 'coverPic', 'logo', 'owner', 'domains', 'applyTerms');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}